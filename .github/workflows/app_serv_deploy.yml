name: App Service Code

permissions:
  id-token: write
  contents: read

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: github-source-board
  REPO_DIR: github-oauth-postgresql-2
  RESOURCE_GROUP_NAME: github-source-board
  FILE_NAME: ${{ github.ref_name }}-${{ github.run_id }}


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: './${{ env.REPO_DIR }}/package-lock.json'

      - name: npm install and build
        run: |
          cd ${{ env.REPO_DIR }}
          npm ci
          npm run build

      - name: Move static assets
        run: |
          cd ${{ env.REPO_DIR }}
          mv .next/static .next/standalone/.next/static
          if [ -d "public" ]; then
            mv public .next/standalone/public
          fi

      # az login --service-principal -u ${app_id} -p ${password} --tenant ${tenant_id}
      - name: Azure Login
        run: | 
          az login --service-principal --username ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      # - name: Azure login
      #   uses: azure/login@v2
      #   with:
      #     client-id: ${{ secrets.AZURE_CLIENT_ID }}
      #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      #     auth-type: service-principal

      - name: Deploy
        shell: pwsh
        run: |
          cd $env:REPO_DIR
          $ZIP_FILE_NAME = "./${{ env.FILE_NAME }}.zip"
          zip $ZIP_FILE_NAME ./* .next -qr

          az webapp deploy `
            --resource-group $env:RESOURCE_GROUP_NAME `
            --name $env:WEB_APP_NAME `
            --src-path $ZIP_FILE_NAME `
            --slot staging `
            --type zip `
            --clean true
        env:
          FILE_NAME: "${{ env.FILE_NAME }}"
          RESOURCE_GROUP_NAME: ${{ env.RESOURCE_GROUP_NAME }}
          WEB_APP_NAME: ${{ env.AZURE_WEBAPP_NAME }}

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: "./${{ env.REPO_DIR }}/${{ env.FILE_NAME }}.zip"

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build

  #   environment:
  #     name: production
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

  #   steps:
  #     - name: Download artifact from build job
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: app

  #     - name: "Deploy to Azure Web App"
  #       id: deploy-to-webapp
  #       uses: azure/webapps-deploy@v3
  #       with:
  #         app-name: ${{ env.AZURE_WEBAPP_NAME }}
  #         slot-name: "Production"
  #         publish-profile: ${{ secrets.AZURE_APP_SERVICE_PUBLISH_PROFILE }}
  #         package: .
