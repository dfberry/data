name: "Weekly: Issues & PRs"

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'

env:
  DRAFT_FILE: assigned_issues_output
  REPORT_NAME: weekly_issues_and_prs
  REPORT_EXTENSION: md


jobs:
  build:
    runs-on: ubuntu-latest

    env: 
      CI_COMMIT_MESSAGE: CI EOM Issues and PRs
      CI_COMMIT_AUTHOR: CI dfberry pat

    steps:

    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: echo "$MATRIX_CONTEXT"

    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.WORKFLOW_GIT_ACCESS_TOKEN }}

    - name: Get date - last saturday
      id: date-echo-1
      run: echo "$(date -d 'last Saturday' +'%y%m%d')"

    - name: Get date 2 - two Saturdays ago
      id: date-echo-2
      run: echo "$(date -d 'last Saturday - 1 week' +'%Y%m%d')"

    - name: Get date - last saturday
      id: date1
      run: echo "::set-output name=date::$(date -d 'last Saturday' +'%y%m%d')"
    - name: Output date - last saturday
      run: |
        echo "${{ steps.date1.outputs.date }}"

    - name: Get date - two Saturdays ago
      id: date2
      run: echo "::set-output name=date::$(date -d 'last Saturday - 1 week' +'%Y%m%d')"
    - name: Output date - two Saturdays ago
      run: |
        echo "${{ steps.date2.outputs.date }}"

    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Issues and PRs to PG
      run: |
        cd automation/issues
        npm ci
        ls -al
        node --loader ts-node/esm src/index.ts LAST_WEEK > data/${{ env.DRAFT_FILE }}.${{ env.REPORT_EXTENSION}}
        ls -al data
        cat data/${{ env.DRAFT_FILE }}.md
        cp data/${{ env.DRAFT_FILE }}.md ../../github/stats/${{ steps.date2.outputs.date }}_${{ env.REPORT_NAME }}.${{ env.REPORT_EXTENSION}}
        ls -al ../../github/stats


    - name: GIT Commit Build Artifacts (coverage, dist, devdist, docs)
      # Only run on main branch push (e.g. after pull request merge).
      run: |
        git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
        git config --global user.email "dfberry@users.noreply.github.com"
        git add github/stats/${{ steps.date2.outputs.date }}_${{ env.REPORT_NAME }}.${{ env.REPORT_EXTENSION}}
        git commit -a -m "${{ env.CI_COMMIT_MESSAGE }}"

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.WORKFLOW_GIT_ACCESS_TOKEN }}
        branch: main
